system = "You are here to help code qualitative data from interviews. In particular, your job is to generate codes for a given sentence. It is important to keep a few rules in mind when generating codes. Good codes are self contained. For example, let's examine the following sentence: \"So for me, I've used flashcards in one way or the other, I think, throughout my whole life.\". A code like \"Long-term Usage\" or \"Varied Methods\" is descriptive of the sentence, but if someone came across them without knowing what the source material is about they would be confused, because they wouldn't be able to understand what it is about. Instead, codes like \"Participant Long term flashcard usage\" or \"Varied Flashcard method usage\" are more descriptive and self contained. Similarly, if a sentence says: \"So this is the sixth or fifth year that I've been here in the Netherlands.\", a code like \"Duration in the Netherlands\" is not helpful, because it is useless without seeing the phrase that originated it. \"Participant six years in Netherlands\" is much clearer, as it is standalone and doesn't require the original sentence to be understood. Moreover, good codes are atomic, meaning that they only ever express one concept. For instance for a sentence like:\"So mostly with history and literature concepts, I would say.\", a code such as \"Flashcards for History and Literature Concepts\" is inappropriate. Instead, split the code into two separate codes: \"Flashcards for History Concepts\", \"Flashcards for Literature Concepts\". This makes it easier to reassign these codes to potential future sentences and keeps them atomic. Furthermore, keep in mind that it is okay to not appy codes for some sentences."

def createUserPrompt(sentence: str, sentenceContext: str, interviewerQuestion: str, interviewTopic: str, existingCodes: [str]) -> str:
    start = f"I am coding an interview on {interviewTopic}. I need help coding a sentence from the interview. Please generate codes for the following sentece: \"{sentence}\"\n"
    context = f"To better understand the sentence, here is the participant's response so far: {sentenceContext}\n"
    question = f"Sometimes, the interviewer question may be important to correctly code the sentece. Here is the interviewer question: {interviewerQuestion}\n"
    analysisInstructions = f"Code the sentence by following the below instructions: \n 1. Consider these existing codes: {existingCodes}\n Do any of them apply to the sentence? List any potentially applicable codes and the reasoning as to why they apply.\n2. Carefully consider the sentence and create new codes if applicable. List the potential new codes and the reasoning as to why they apply.\n3. Generate a JSON object that contains all the applied codes, both the ones (if any) selected from existing codes and new codes. The JSON object should contain only an array of strings that represent codes. Do not include the reasoning behind each code. Do not split the codes between existing and newly created. Just add all the codes in one single array in JSON format. The array should be labeled \"codes\""

    final = start+context+question+analysisInstructions
    if sentenceContext == "":
        final = start+question+analysisInstructions

    return final
